{"ast":null,"code":"var _jsxFileName = \"/home/newtou/codes/personal/fun/foodie/src/server.js\";\nvar __jsx = React.createElement;\nimport App from './App';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\nimport { useServer } from '../api/useServer';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join('') : '' : '';\n};\n\nconst server = express(); // user server to add other functionality {}\n\nuseServer(server);\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', (req, res) => {\n  const context = {};\n  const markup = renderToString(__jsx(StaticRouter, {\n    context: context,\n    location: req.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n\n  if (context.url) {\n    res.redirect(context.url);\n  } else {\n    res.status(200).send(`<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charset=\"utf-8\" />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n</html>`);\n  }\n});\nexport default server;","map":{"version":3,"sources":["/home/newtou/codes/personal/fun/foodie/src/server.js"],"names":["App","React","StaticRouter","express","renderToString","useServer","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","server","disable","use","static","RAZZLE_PUBLIC_DIR","get","req","res","context","markup","url","redirect","status","send"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAtB;;AAEA,MAAMC,kBAAkB,GAAG,CAACL,MAAD,EAASM,UAAT,KAAwB;AAC/C,SAAON,MAAM,CAACM,UAAD,CAAN,GACDN,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,GACIP,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,CACKC,GADL,CACUC,KAAD,IAAY,gCAA+BA,KAAM,IAD1D,EAEKC,IAFL,CAEU,EAFV,CADJ,GAII,EALH,GAMD,EANN;AAOH,CARD;;AAUA,MAAMC,sBAAsB,GAAG,CAACX,MAAD,EAASM,UAAT,EAAqBM,KAAK,GAAG,EAA7B,KAAoC;AAC/D,SAAOZ,MAAM,CAACM,UAAD,CAAN,GACDN,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,GACIb,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,CACKL,GADL,CACUC,KAAD,IAAY,gBAAeA,KAAM,IAAGG,KAAM,YADnD,EAEKF,IAFL,CAEU,EAFV,CADJ,GAII,EALH,GAMD,EANN;AAOH,CARD;;AAUA,MAAMI,MAAM,GAAGjB,OAAO,EAAtB,C,CAEA;;AACAE,SAAS,CAACe,MAAD,CAAT;AAEAA,MAAM,CACDC,OADL,CACa,cADb,EAEKC,GAFL,CAESnB,OAAO,CAACoB,MAAR,CAAef,OAAO,CAACC,GAAR,CAAYe,iBAA3B,CAFT,EAGKC,GAHL,CAGS,IAHT,EAGe,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrB,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,MAAM,GAAGzB,cAAc,CACzB,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEwB,OAAvB;AAAgC,IAAA,QAAQ,EAAEF,GAAG,CAACI,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADyB,CAA7B;;AAMA,MAAIF,OAAO,CAACE,GAAZ,EAAiB;AACbH,IAAAA,GAAG,CAACI,QAAJ,CAAaH,OAAO,CAACE,GAArB;AACH,GAFD,MAEO;AACHH,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAUtB,kBAAkB,CAACL,MAAD,EAAS,QAAT,CAAmB;AAC/C;AACA;AACA,yBAAyBuB,MAAO;AAChC,UAAUZ,sBAAsB,CAACX,MAAD,EAAS,QAAT,EAAmB,oBAAnB,CAAyC;AACzE;AACA,QAdY;AAgBH;AACJ,CA/BL;AAiCA,eAAec,MAAf","sourcesContent":["import App from './App'\nimport React from 'react'\nimport { StaticRouter } from 'react-router-dom'\nimport express from 'express'\nimport { renderToString } from 'react-dom/server'\nimport { useServer } from '../api/useServer'\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST)\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n    return assets[entrypoint]\n        ? assets[entrypoint].css\n            ? assets[entrypoint].css\n                  .map((asset) => `<link rel=\"stylesheet\" href=\"${asset}\">`)\n                  .join('')\n            : ''\n        : ''\n}\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n    return assets[entrypoint]\n        ? assets[entrypoint].js\n            ? assets[entrypoint].js\n                  .map((asset) => `<script src=\"${asset}\"${extra}></script>`)\n                  .join('')\n            : ''\n        : ''\n}\n\nconst server = express()\n\n// user server to add other functionality {}\nuseServer(server)\n\nserver\n    .disable('x-powered-by')\n    .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n    .get('/*', (req, res) => {\n        const context = {}\n        const markup = renderToString(\n            <StaticRouter context={context} location={req.url}>\n                <App />\n            </StaticRouter>\n        )\n\n        if (context.url) {\n            res.redirect(context.url)\n        } else {\n            res.status(200).send(\n                `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charset=\"utf-8\" />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, 'client')}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n    </body>\n</html>`\n            )\n        }\n    })\n\nexport default server\n"]},"metadata":{},"sourceType":"module"}